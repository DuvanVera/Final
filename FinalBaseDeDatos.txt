plsql.execute <<-SQL
create table amortizacion (
  numero_cuota integer,
  cuota_mensual decimal(15,2),
  abono_capital decimal(15,2),
  abono_interes decimal(15,2),
  saldo decimal(15,2)
)

create or replace procedure CALCULAR_SIMULACION (tasa_efectiva_anual in decimal, TOTAL_cuotas in integer, VALOR_prestamo in decimal) is
  tasa_nominal_mensual decimal;
  cuota_mensual decimal;
  n decimal;
  d decimal;
  abono_interes decimal;
  abono_capital decimal;
  saldo decimal;
  
begin

    delete from amortizacion;
    tasa_nominal_mensual := (1+(tasa_efectiva_anual/100))**(30/365)-1;
    
    n := tasa_nominal_mensual*VALOR_prestamo;
    d := 1-(1+tasa_nominal_mensual)**(-TOTAL_cuotas);
    
    cuota_mensual := n/d;
    
    saldo := VALOR_prestamo;
    
    for i in 1 .. TOTAL_cuotas loop
    
      abono_interes := tasa_nominal_mensual*saldo;
      abono_capital := cuota_mensual-abono_interes;
      saldo := saldo-abono_capital;
      
      insert into amortizacion values (i,cuota_mensual,abono_capital,abono_interes,saldo);
      
    end loop;
    
end
SQL


plsql.execute <<-SQL
create or replace FUNCTION FIND_OUTLIER RETURN BOOLEAN AS

Type Array_1 Is varray(8) of Number(10);
Type Array_2 Is varray(8) of Number(10);

Array_A  Array_1 := Array_1(2, 4, 0, 100, 4, 11, 2602, 36);
Array_B  Array_2 := Array_2(160, 3, 1719, 19, 11, 13, -21);

lb_Existe Boolean := False;
Ln_Modulo Number:=0;
BEGIN
    For Ln_Index In 1..8 Loop
       if  MOD(Array_A(Ln_Index),0)>0 then 
                 lb_Existe:=True; 
       End IF;    
    End Loop;
    
    Return lb_Existe;
END;
SQL